# Multi-stage build for optimized PowerShell container
# Stage 1: Module installation
FROM mcr.microsoft.com/powershell:7.4-alpine-3.18 AS builder

# Install PowerShell modules
RUN pwsh -Command " \
    \$ProgressPreference = 'SilentlyContinue'; \
    Install-Module -Name Az -Force -AllowClobber -Scope CurrentUser; \
    Install-Module -Name Pester -Force -Scope CurrentUser; \
    Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser"

# Stage 2: Runtime image
FROM mcr.microsoft.com/powershell:7.4-alpine-3.18

# Install only runtime dependencies
RUN apk add --no-cache \
    curl \
    jq \
    bash \
    && adduser -D -u 1000 appuser

# Copy PowerShell modules from builder
COPY --from=builder --chown=appuser:appuser /root/.local/share/powershell/Modules /home/appuser/.local/share/powershell/Modules

# Set working directory
WORKDIR /app

# Copy application files with proper ownership
COPY --chown=appuser:appuser creative-cloud/ ./scripts/
COPY --chown=appuser:appuser config/ ./config/
COPY --chown=appuser:appuser tests/*.ps1 ./tests/

# Create logs directory with proper permissions
RUN mkdir -p /app/logs && chown -R appuser:appuser /app

# Create optimized entrypoint script
RUN printf '#!/bin/sh\nexec pwsh -Command "while (\$true) { & /app/scripts/scheduler/Run-ScheduledTasks.ps1; Start-Sleep -Seconds 300 }"' > /entrypoint.sh \
    && chmod +x /entrypoint.sh \
    && chown appuser:appuser /entrypoint.sh

# Switch to non-root user
USER appuser

# Set PowerShell module path
ENV PSModulePath="/home/appuser/.local/share/powershell/Modules:/usr/local/share/powershell/Modules"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD pwsh -Command "exit 0" || exit 1

# Run PowerShell automation
ENTRYPOINT ["/entrypoint.sh"]