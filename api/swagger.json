{
  "openapi": "3.0.0",
  "info": {
    "title": "Adobe Enterprise Automation API",
    "version": "2.0.0",
    "description": "Enterprise-scale Adobe Creative Cloud automation system API",
    "contact": {
      "name": "Wesley Ellis",
      "email": "wes@wesellis.com",
      "url": "https://github.com/wesellis/adobe-enterprise-automation"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Development server"
    },
    {
      "url": "https://api.adobe-automation.company.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["email", "firstName", "lastName"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique user identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "firstName": {
            "type": "string",
            "description": "User first name"
          },
          "lastName": {
            "type": "string",
            "description": "User last name"
          },
          "department": {
            "type": "string",
            "description": "User department"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Assigned Adobe products"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "suspended"],
            "description": "User account status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "License": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "description": "Adobe product name"
          },
          "total": {
            "type": "integer",
            "description": "Total available licenses"
          },
          "used": {
            "type": "integer",
            "description": "Currently used licenses"
          },
          "available": {
            "type": "integer",
            "description": "Available licenses"
          },
          "cost": {
            "type": "number",
            "format": "float",
            "description": "Monthly cost per license"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          }
        }
      },
      "AuthRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username or email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT authentication token"
          },
          "expiresIn": {
            "type": "integer",
            "description": "Token expiration time in seconds"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "tags": ["System"],
        "security": [],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "number"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate user",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of users to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of users to skip"
          },
          {
            "in": "query",
            "name": "department",
            "schema": {
              "type": "string"
            },
            "description": "Filter by department"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["active", "inactive", "suspended"]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "offset": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/batch": {
      "post": {
        "summary": "Create multiple users",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch operation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "successful": {
                      "type": "integer"
                    },
                    "failed": {
                      "type": "integer"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/licenses": {
      "get": {
        "summary": "Get license information",
        "tags": ["Licenses"],
        "responses": {
          "200": {
            "description": "License information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "licenses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/License"
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "totalLicenses": {
                          "type": "integer"
                        },
                        "usedLicenses": {
                          "type": "integer"
                        },
                        "availableLicenses": {
                          "type": "integer"
                        },
                        "monthlyCost": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/licenses/utilization": {
      "get": {
        "summary": "Get license utilization metrics",
        "tags": ["Licenses"],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for utilization period"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for utilization period"
          }
        ],
        "responses": {
          "200": {
            "description": "Utilization metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "utilization": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "number"
                        },
                        "trend": {
                          "type": "string",
                          "enum": ["increasing", "decreasing", "stable"]
                        }
                      }
                    },
                    "recommendations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/licenses/optimize": {
      "post": {
        "summary": "Optimize license allocation",
        "tags": ["Licenses"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inactiveDays": {
                    "type": "integer",
                    "default": 30,
                    "description": "Days of inactivity before reclaiming license"
                  },
                  "autoReclaim": {
                    "type": "boolean",
                    "default": false,
                    "description": "Automatically reclaim unused licenses"
                  },
                  "useMachineLearning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use ML for optimization recommendations"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Optimization results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "optimized": {
                      "type": "boolean"
                    },
                    "reclaimedLicenses": {
                      "type": "integer"
                    },
                    "potentialSavings": {
                      "type": "number"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          },
                          "product": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/usage": {
      "get": {
        "summary": "Generate usage report",
        "tags": ["Reports"],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Report start date"
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Report end date"
          },
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": ["json", "csv", "pdf"],
              "default": "json"
            },
            "description": "Report format"
          }
        ],
        "responses": {
          "200": {
            "description": "Usage report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "report": {
                      "type": "object"
                    },
                    "period": {
                      "type": "object",
                      "properties": {
                        "startDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/compliance": {
      "get": {
        "summary": "Generate compliance report",
        "tags": ["Reports"],
        "responses": {
          "200": {
            "description": "Compliance report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "compliant": {
                      "type": "boolean"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": ["low", "medium", "high"]
                          },
                          "description": {
                            "type": "string"
                          },
                          "remediation": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "lastAudit": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sync": {
      "post": {
        "summary": "Sync users from external source",
        "tags": ["Sync"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "enum": ["ActiveDirectory", "AzureAD", "Okta", "CSV"],
                    "description": "Source system"
                  },
                  "dryRun": {
                    "type": "boolean",
                    "default": false,
                    "description": "Preview changes without applying"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sync results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "synced": {
                      "type": "integer"
                    },
                    "created": {
                      "type": "integer"
                    },
                    "updated": {
                      "type": "integer"
                    },
                    "deleted": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System operations"
    },
    {
      "name": "Authentication",
      "description": "Authentication endpoints"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Licenses",
      "description": "License management operations"
    },
    {
      "name": "Reports",
      "description": "Reporting endpoints"
    },
    {
      "name": "Sync",
      "description": "External system synchronization"
    }
  ]
}